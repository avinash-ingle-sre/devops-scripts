#!/bin/bash

# Backup рдЖрдгрд┐ Restore рд╕рд╛рдареА рдЖрд╡рд╢реНрдпрдХ directory
BACKUP_DIR="/root/backups"
RESTORE_DIR="/tmp/restore-check"

# Timestamp format
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")

# Function: Backup
backup() {
    echo "ЁЯУж Backup рд╕реБрд░реВ рдХрд░рдд рдЖрд╣реЗ..."

    FILE_NAME="system_backup_${TIMESTAMP}.tar.gz"
    FILE_PATH="${BACKUP_DIR}/${FILE_NAME}"

    # Directory exists рдирд╕реЗрд▓ рддрд░ рддрдпрд╛рд░ рдХрд░рд╛
    mkdir -p "$BACKUP_DIR"

    # Backup command (basic system folders)
    tar -czf "$FILE_PATH" /etc /var /home 2>/dev/null

    if [[ $? -eq 0 ]]; then
        echo "тЬЕ Backup рдпрд╢рд╕реНрд╡реА: $FILE_PATH"
    else
        echo "тЭМ Backup рдЕрдпрд╢рд╕реНрд╡реА"
    fi
}

# Function: Restore
restore() {
    FILE_PATH=$1

    if [[ -z "$FILE_PATH" ]]; then
        echo "тЭЧ рдХреГрдкрдпрд╛ restore рд╕рд╛рдареА рдкреВрд░реНрдг file path рджреНрдпрд╛."
        echo "рдЙрджрд╛рд╣рд░рдг: ./backup_restore.sh restore /root/backups/system_backup_2025-06-11_10-57-46.tar.gz"
        exit 1
    fi

    if [[ ! -f "$FILE_PATH" ]]; then
        echo "тЭЧ рджрд┐рд▓реЗрд▓реА рдлрд╛рдИрд▓ рд╕рд╛рдкрдбрд▓реА рдирд╛рд╣реА: $FILE_PATH"
        exit 1
    fi

    echo "ЁЯФБ Restore рд╕реБрд░реВ рдЖрд╣реЗ: $FILE_PATH"
    mkdir -p "$RESTORE_DIR"
    tar -xzf "$FILE_PATH" -C "$RESTORE_DIR"

    if [[ $? -eq 0 ]]; then
        echo "тЬЕ Restore рдкреВрд░реНрдг: $RESTORE_DIR рдордзреНрдпреЗ рдлрд╛рдИрд▓реНрд╕ extract рдЭрд╛рд▓реНрдпрд╛."
    else
        echo "тЭМ Restore рдордзреНрдпреЗ рдЕрдбрдЪрдг рдЖрд▓реА"
    fi
}

# Main logic
case $1 in
    backup)
        backup
        ;;
    restore)
        restore "$2"
        ;;
    *)
        echo "тЭЧ рдХреГрдкрдпрд╛ рдпреЛрдЧреНрдп command рд╡рд╛рдкрд░рд╛: backup рдХрд┐рдВрд╡рд╛ restore"
        echo "рдЙрджрд╛рд╣рд░рдг:"
        echo "  ./backup_restore.sh backup"
        echo "  ./backup_restore.sh restore /root/backups/system_backup_YYYY-MM-DD_HH-MM-SS.tar.gz"
        ;;
esac

